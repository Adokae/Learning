# include <iostream>
using namespace std;
/*
继承：面向对象的三大特性之一
减少重复代码
语法： class 子类：继承方式 父类
子类也称为派生类
父类也称为基类
*/

// 普通实现页面
// Java页面
//class Java
//{
//public:
//	void header()
//	{
//		cout << "首页、公开课、登录、注册....（公共头部）" << endl;
//	}
//	void footer()
//	{
//		cout << "帮助中心、交流合作、....（公共底部）" << endl;
//	}
//	void left()
//	{
//		cout << "Jave、Python、....（公共分类列表）" << endl;
//	}
//	void content()
//	{
//		cout << "Java学科视频" << endl;
//	}
//};
//
//// Java页面
//class Python
//{
//public:
//	void header()
//	{
//		cout << "首页、公开课、登录、注册....（公共头部）" << endl;
//	}
//	void footer()
//	{
//		cout << "帮助中心、交流合作、....（公共底部）" << endl;
//	}
//	void left()
//	{
//		cout << "Jave、Python、....（公共分类列表）" << endl;
//	}
//	void content()
//	{
//		cout << "Python学科视频" << endl;
//	}
//};

// 继承实现
class BasePage
{
public:
	public:
	void header()
	{
		cout << "首页、公开课、登录、注册....（公共头部）" << endl;
	}
	void footer()
	{
		cout << "帮助中心、交流合作、....（公共底部）" << endl;
	}
	void left()
	{
		cout << "Jave、Python、....（公共分类列表）" << endl;
	}
};

// Java页面
class Java :public BasePage
{
public:
	void content()
	{
		cout << "Java学科视频" << endl;
	}
};

// Python页面
class Python :public BasePage
{
public:
	void content()
	{
		cout << "Python学科视频" << endl;
	}
};

void test1()
{
	cout << "Java下载视频页面" << endl;
	Java ja;
	ja.header();
	ja.footer();
	ja.left();
	ja.content();

	cout << "--------------" << endl;
	cout << "Python下载视频页面" << endl;
	Python py;
	py.header();
	py.footer();
	py.left();
	py.content();
}

int main()
{
	test1();
	system("pause");

	return 0;
}
