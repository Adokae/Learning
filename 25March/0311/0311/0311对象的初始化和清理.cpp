# include <iostream>
using namespace std;
/*
对象的初始化和清理：
构造函数和析构函数被编译器自动调用，完成对象初始化和清理工作
编译器提供的构造函数和析构函数是空实现

构造函数
主要用于创建对象时为对象的成员属性赋值
析构函数
主要用于对象销毁前系统自动调用，执行一些清理工作

构造函数语法： 类名(){}
注意：
1 构造函数 没返回值也不写void
2 函数名称与类名相同
3 构造函数可以有参数，因此可以发生重载
4 程序在调用对象时会自动调用构造，无需手动调用，而且只会调用一次

析构函数语法： ~类名(){}
注意：
1 构造函数 没返回值也不写void
2 函数名称与类名相同，在名称前加~
3 构造函数不可以有参数，因此不可以发生重载
4 程序在调用对象时会自动调用析构，无需手动调用，而且只会调用一次


*/

class Person
{
public:
	// 构造函数
	Person()
	{
		cout <<"Person构造函数的调用" << endl;
	}
	// 析构函数
	~Person()
	{
		cout << "Person析构函数的调用" << endl;
	}

};

void test1()
{
	Person p;
}

int main()
{
	//test1();
	Person p; // 不会出现析构函数的调用
	//因为下一句时system，还未退出程序
	// main()结束后才调用析构函数
	system("pause");

	return 0;
}
