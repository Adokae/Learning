# include <iostream>
using namespace std;

/*
c++中面向对象
内存分区模型：
c++程序在执行时，将内存方向划分为4个区域：
1 代码区：存放函数体的二进制代码，由操作系统进行管理
2 全局区:存放全局变量和静态变量，以及常量
3 栈区：由编译器自动分配释放，存放函数的参数值、局部变量等
4 堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收

不同区域存放不同数据，赋予不同的生命周期，给我们更大的灵活编程

程序运行前：
程序编译后，生成.exe可执行程序，未执行该程序前可分为两个区域：
代码区：
   存放CPU执行的机器指令
   代码区是共享的，目的是对于频繁被执行的程序，只需要在内存中有一份代码即可
   代码区是只读的，目的是防止程序意外地修改它的指令

全局区：
	全局变量和静态变量存放在此
	全局区还包含常量区，字符串常量和其它常量也存放在此
	该区域数据在程序结束后由操作系统释放
*/
int main()
{

	system("pause");

	return 0;
}
