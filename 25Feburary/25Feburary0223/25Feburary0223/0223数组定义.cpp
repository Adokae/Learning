#include <iostream>
using namespace std;

/*
数组中存放的数据元素的数据类型相同，所存储的内存地址连续
定义数组的时候，必须要有初始长度

一维数组定义的三种方式：
1 数据类型 数组名[数组长度];
2 数据类型 数组名[数组长度] = {值1，值2，...}；
若在初始化数据时，数据没有补充完整，会用0来填补剩余的数据
比如，数组长度为2，但初始化时只初始化两个值，则第三个数的值为0
3 数据类型 数组名[ ] = {值1，值2，...};
*/
int main()
{
	// 数组创建方式1
	//int arr[5];
	//// 对数组中的元素进行赋值
	//arr[0] = 10;
	//arr[1] = 20;
	//arr[2] = 30;
	//arr[3] = 40;
	//arr[4] = 50;
	//// 访问数据元素
	//for (int i = 0; i <= 4; i++)
	//{
	//	//cout << arr[i] << endl;
	//	printf("%d\n", arr[i]);
	//}

	//一维数组创建方式2
	//int arr2[5] = { 10, 20, 30, 40,50 };
	////// 访问数据元素
	//for (int i = 0; i <= 4; i++)
	//{
	//	//cout << arr[i] << endl;
	//	printf("%d\n", arr2[i]);
	//}

	// 一维数组创建方式3
	int arr3[] = { 90, 80, 70, 60, 50, 40 };
	for (int i = 0; i <= 4; i++)
	{
		printf("%d\n", arr3[i]);
	}
	
	system("pause");
	return 0;
}
