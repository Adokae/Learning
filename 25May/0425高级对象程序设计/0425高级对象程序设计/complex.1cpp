#include <iostream>
using namespace std;
#include "complex.h"
/*
侯捷老师C++高级对象程序设计

设计一个类 实现复数计算

代码编辑原则：
1 数据一定在private
2 参数传递尽可能用reference 若不需要改变变量 需要加const 
3 返回值尽可能用reference传递
4 类中整体的body中若不需要改变变量的函数 就要加const
5 构造函数尽可能在执行函数体前初始化类的成员变量 complex(double r = 0, double i = 0) :re(r),im(i) {}
6 函数处理后的返回值放置有两种可能：1 将返回值放置到已经创建过的数据位置 2 新开辟一个数据空间进行放置
7 this表示谁调用这个函数 this就指向谁
8 创建的参数接收函数返回值时，传递者无需知道接收者是以reference(什么)形式接收
9 局部变量不能返回引用 只能返回值
10 设置函数时需要考虑是否需要使用const
11 inline关键字用于建议编辑器在调用函数的地方直接展开函数体，而不是通过常规的函数调用机制
(调用函数过程中会进行入栈出栈等开销 )
意味着编辑器在遇到调用该函数的地方，会将函数体的代码直接嵌入到调用点，避免函数调用的开销，
适用于小型函数



同一个类下创建的各实例对象互为友元

*/

int main() {
	complex c1(9, 8);

	system("pause");

	return 0;
}
