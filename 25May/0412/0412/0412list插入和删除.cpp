# include <iostream>
using namespace std;
#include <list>
/*
list插入和删除：

函数：
1 push_back(elem) 在容器尾部加入一个元素
2 pop_back() 删除容器中最后一个元素
3 push_front(elem) 在容器开头插入一个元素
4 pop_front() 从容器开头移除第一个元素
5 inset(pos,elem) 在pos位置插elem元素的拷贝 返回新数据的位置
6 insert(pos,n,elem) 在pos位置插n个elem数据 无返回值
7 insert(pos,beg,end)  在pos位置插[beg,end)数据 无返回值
8 clear() 移除容器的所有数据
9 erase(beg,end) 删除[beg,end)区间的数据 返回下一个数据的位置
10 erase(pos) 删除pos位置的数据 返回下一个数据的位置
11 remove(elem) 移除容器中所有与elem值匹配的元素


*/
void printList(const list<int>& L)
{
	for (list<int>::const_iterator it = L.begin(); it != L.end(); it++)
	{
		cout << *it << " ";
	}
	cout << endl;
}


void test1()
{
	list<int>L1;

	// 尾插
	L1.push_back(10);
	L1.push_back(20);
	L1.push_back(30);
	L1.push_back(40);

	// 头插
	L1.push_front(100);
	L1.push_front(200);
	L1.push_front(300);
	L1.push_front(400);
	printList(L1);

	// 尾删
	L1.pop_back();
	printList(L1);

	// 头删
	L1.pop_front();
	printList(L1);

	//插入
	//L1.insert(L1.begin(), 1000);

	list<int>::iterator it = L1.begin();
	L1.insert(++it, 1000);
	printList(L1);

	// 删除
	it = L1.begin();
	L1.erase(++it);
	printList(L1);

	// 移除
	L1.push_back(100000);
	printList(L1);
	L1.push_back(100000);
	L1.push_back(100000);
	L1.push_back(100000);
	printList(L1);
	L1.remove(100000);
	printList(L1);

	// 清空
	L1.clear();
	printList(L1);
}


int main()
{
	test1();
	system("pause");

	return 0;
}
